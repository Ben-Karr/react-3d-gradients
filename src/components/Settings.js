import Slider from 'rc-slider';
import 'rc-slider/assets/index.css';

export function Settings({ a, setA, b, setB, loss , alphaExponent, setAlphaExponent, onStep}) {
    // subtract a tiny margin (stepsize of a|b grid) to keep all values of the slider inside the surface

    return (
        <>
            <h3>Settings:</h3>
            a: {a}
            <Slider onChange={setA} min={-1} max={6-0.33333} value={a} step={0.01}/> 
            b: {b}
            <Slider onChange={setB} min={-4} max={8-0.4} value={b} step={0.01} />
            <p> Change <code>a</code> and <code>b</code> in order to find the quadratic function <code>a*x^2+b*x</code> with the smallest loss for the given data points.</p>
            <h4>Current Loss:</h4>
            <p>(Mean square error / squared distance from each data point to its counterpart on the current curve.) </p>
            <p>{Math.round(loss*100, 2)/100}</p>
            <h3>Gradient Stepper:</h3>
            <p>Pick a learning rate and step <code>(a,b)</code> in the direction of the negative gradient</p>
            lr: {Math.round(Math.pow(0.1,alphaExponent)*10000, 2)/1000}
            <Slider onChange={setAlphaExponent} value={alphaExponent} min={1} max={5} marks={{ 1: '1', 2: '1E-2', 3: '1E-3', 4: '1E-4', 5: '1E-5'}} step={null} />
            <button onClick={onStep}>Step</button>
            <h3>Description:</h3>
            <p>The left figure shows a collection of points generated by adding random noise to images of <code>3*x^2+2*x</code>. The red curve is the graph of <code>a*x^2+b*x</code> where <code>a</code> and <code>b</code> 
            can be changed by the slders.</p>
            <p>The right figure is the graph of the loss function <code>(a,b) \mapsto mse(y - g_a,b(x)) </code>. The circle represents the loss that the corresponding function on the left generated with set <code>a&b</code>. 
            The arror points into the direction of the negative gradients at <code>(a,b)</code>. Note that the gradient lives in the 2 dimensional a-b-plane.</p>
        </>
    )
}